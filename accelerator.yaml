accelerator:
  displayName: EcoBoost Accelerator
  description: Ford "EcoBoost" Web Application Starter provides a curated set of APIs, frameworks and deployment topologies to quickly create a cloud-native microservice-based web application. It can be targeted to Ford employees, Ford dealers, Ford vehicle owners or prospective Ford customers..
  iconUrl: https://raw.githubusercontent.com/cgsamp/ecoboost-accelerator/main/img/logo.png
  tags:
    - Spring
    - Web
    - React
    - API
    - ford
  options:
    - name: audience
      label: Application audience
      inputType: checkbox
      dataType: [string]
      display: true
      required: true
      defaultValue: 
        - "Internal"
      choices:
        - text: Internal - VPN required
          value: "Internal"
        - text: Dealer - Includes Vehicle Incentive APIs
          value: "dealer"
        - text: Vehicle Owner - Connection to VIN data included
          value: owner
        - text: Prospective Customer - Marketing assets and language review workflow
          value: prospect
        
    - name: deployment-target
      label: Deployment Target
      inputType: checkbox
      dataType: [string]
      display: true
      required: true
      defaultValue: 
        - "gcr"
      choices:
        - text: PCF / Tanzu Application Service
          value: "pcf"
        - text: Ford OpenShift CaaS
          value: "openshift"
        - text: Google Cloud Run
          value: gcr
        - text: Google Kubernetes Engine
          value: gke
        
    - name: databaseType
      label: Database Type
      inputType: select
      dataType: string
      display: true
      required: true
      defaultValue: "BigQuery"
      choices:
        - text: GCP BigQuery
          value: "BigQuery"
        - text: Microsoft SQL Server EDC1/2
          value: "mssql"
        - text: Postgres on Kubernetes
          value: "postgres"
    - name: memoryCache
      label: Include a cache (Redis)?
      inputType: toggle
      display: false
      dataType: boolean
      defaultValue: false

engine:
  merge:
    - include: [ "**/**" ]
      exclude: [ "reg.yaml", "components/database/**", "applications/**", "ytt/**" ]
    - include: [ "settings.gradle.kts" ]
      chain:
        - type: ReplaceText
          substitutions:
            - text: example-spring-accelerator
              with: "#artifactId"
    - condition: "#javaVersion == '17'"
      include: [ "buildSrc/src/main/kotlin/java-library-conventions.gradle.kts" ]
      chain:
        - type: ReplaceText
          substitutions:
            - text: JavaLanguageVersion.of(11)
              with: "'JavaLanguageVersion.of(17)'"
    - include: [ ".github/workflows/build.yml" ]
      chain:
        - type: ReplaceText
          condition: "#javaVersion == '17'"
          substitutions:
            - text: 11
              with: "'17'"
        - type: ReplaceText
          condition: "#sonar == false"
          substitutions:
            - text: sonarqube
              with: "''"
    - condition: "#noDB == true"
      include: [ "applications/billboard-stateless/**" ]
    - condition: "#noDB == false"
      include: [ "components/database/**", "applications/billboard/**" ]
    - include: [ "build.gradle.kts"]
      chain:
        - type: ReplaceText
          condition: "#sonar == true"
          substitutions:
            - text: asaikali_example-spring-accelerator
              with: "#projectKey"
        - type: ReplaceText
          condition: "#sonar == false"
          substitutions:
            - text: |
                sonarqube {
                    properties {
                        property("sonar.projectKey", "asaikali_example-spring-accelerator")
                        property("sonar.organization", "asaikali")
                        property("sonar.host.url", "https://sonarcloud.io")
                    }
                }
              with: "''"

